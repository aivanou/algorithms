version: 2.1

orbs:
  python: circleci/python@0.2.1


setup_env_variables: &setup_env_variables
  - run:
      name: Setup env variables
      command: |
        tagged_version() {
          # Grabs version from either the env variable CIRCLE_TAG
          # Note: we assume that all tags start with prefix 'v'
          if [[ -n "${CIRCLE_TAG}#v" ]]; then
            echo "${CIRCLE_TAG}"
          else
            eval 'cat ./version.txt'
          fi
        }

        BASE_BUILD_VERSION="$(tagged_version)"
        # Since the tag starts with the 'v' we remove the first symbol to get version.
        BASE_BUILD_VERSION=${BASE_BUILD_VERSION}
        echo "export BASE_BUILD_VERSION=$BASE_BUILD_VERSION" >> $BASH_ENV


publish_docker: &publish_docker
  docker:
    - image: circleci/buildpack-deps:stretch

  steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Build Docker image
        command: |
          if [[ -z ${CIRCLE_TAG} ]]; then
            echo "ERROR: the workflow should only be executed on the tag"
            exit 1
          fi
          echo "Buiding image $IMAGE_NAME:$TORCHELASTIC_BUILD_VERSION"
          docker build -t $IMAGE_NAME:$TORCHELASTIC_BUILD_VERSION .
          echo "$DOCKER_PWD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          echo "Pushing image $IMAGE_NAME:$TORCHELASTIC_BUILD_VERSION to docker hub"
          docker push $IMAGE_NAME:$TORCHELASTIC_BUILD_VERSION

jobs:
  build-and-test:
    executor: python/default
    working_directory: ~/algorithms
    steps:
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - <<: *setup_env_variables
      - run:
          name: Verify git tag and version consistency
          command: |
            python3 setup.py verify

  build_publish_docker_version:
    environment:
      IMAGE_NAME: aivanou/test
      VERSION: 0.2.0rc0

    <<: *publish_docker


  verify_correct_version:
    docker:
      - image: default

    steps:
      - checkout
      - <<: *setup_env_variables
      - run:
          name: Verify git tag and version consistency
          command: |
            python3 setup.py verify


  upload_to_pypi:

    docker:
      - image: circleci/python:3.6

    steps:
      - checkout
      - <<: *setup_env_variables

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-cpu-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v2-cpu-dependencies-

      - run:
          name: Install python deps
          command: |
            sudo pip install twine

      - run:
          name: Setup .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PWD" >> ~/.pypirc
      - run:
          name: Build packages
          command: |
            python3 setup.py sdist bdist_wheel

      - run:
          name: Upload packages
          command: |
            python3 -m twine upload dist/*


workflows:
  main:
    jobs:
      - build-and-test
  circleci-docs-workflow:
    jobs:
      - verify_correct_version:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

      - build_publish_docker_version:
          requires:
            - verify_correct_version
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

#      - upload_to_pypi:
#          requires:
#            - verify_correct_version
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /^v.*/


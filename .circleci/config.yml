version: 2.1

orbs:
  python: circleci/python@0.2.1

publish_docker: &publish_docker
  docker:
    - image: circleci/buildpack-deps:stretch

  steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Build Docker image
        command: |
          if [[ -z ${CIRCLE_TAG} ]]; then
            echo "ERROR: the workflow should only be executed on the tag"
            exit 1
          fi
          publish_version=${CIRCLE_TAG#"v."}
          echo "Buiding image $IMAGE_NAME:$publish_version"
          docker build -t $IMAGE_NAME:$publish_version .
          echo "$DOCKER_PWD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          echo "Pushing image $IMAGE_NAME:$publish_version to docker hub"
          docker push $IMAGE_NAME:$publish_version

jobs:
  build-and-test:
    executor: python/default
    working_directory: ~/algorithms
    steps:
      #      - attach_workspace:
      #          at: /home/circleci/project
      - checkout
      - python/load-cache
      - python/install-deps
      - python/save-cache
      - run:
          command: python -c "import numpy; print(numpy.__version__)"
          name: Test
      - run:
          name: run test0
          command: |
            pwd
      - run:
          name: run test2
          command: |
            bash ./scripts/setup_env_variables.sh
      - run:
          command: echo $BASE_BUILD_VERSION
          name: Test
      - run:
          name: run test1
          command: |
            t="ls -la"
            eval $t
            cat ./env

  build_publish_docker_latest:
    environment:
      IMAGE_NAME: aivanou/test
      VERSION: latest

    <<: *publish_docker

  #  build_publish_docker_version:
  #    environment:
  #      IMAGE_NAME: aivanou/test
  #      VERSION: 0.2.0rc0
  #    steps:
  #
  #      - run:
  #            name: run test
  #            command: |
  #              bash ./scripts/setup_env_variables.sh


  #    <<: *publish_docker


  verify_correct_version:
    docker:
      - image: circleci/python:3.6

    steps:
      - checkout
      - run:
          name: Verify git tag and version consistency
          command: |
            python3 setup.py verify


  upload_to_pypi:

    docker:
      - image: circleci/python:3.6

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-cpu-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v2-cpu-dependencies-

      - run:
          name: Install python deps
          command: |
            sudo pip install twine

      - run:
          name: Setup .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PWD" >> ~/.pypirc
      - run:
          name: Build packages
          command: |
            python3 setup.py sdist bdist_wheel

      - run:
          name: Upload packages
          command: |
            python3 -m twine upload dist/*


workflows:
  main:
    jobs:
      - build-and-test
  circleci-docs-workflow:
    jobs:
      - build-and-test:
          #          requires:
          #            - verify_correct_version
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

#      - verify_correct_version:
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /^v.*/

#      - build_publish_docker_version:
#          requires:
#            - verify_correct_version
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /^v.*/

#      - build_publish_docker_latest:
#          requires:
#            - verify_correct_version
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /^v.*/
#
#      - upload_to_pypi:
#          requires:
#            - verify_correct_version
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /^v.*/
#
